---
- name: Patch Rocky Linux systems, generate patching report, and reboot if necessary
  hosts: all
  gather_facts: true
  become: yes
  tasks:

    - name: Upgrade all packages
      package:
        name: "*"
        state: latest
      register: patching_report

    - name: Generate patching report
      copy:
        content: |
          Hostname: {{ inventory_hostname }}
          Date: {{ ansible_date_time.date }}
          Time: {{ ansible_date_time.time }}
          Patching Report:
          {{ patching_report | to_nice_json }}
        dest: "/tmp/patching_report_{{ inventory_hostname }}.txt"
      delegate_to: localhost

    - name: Check if reboot is required
      shell: needs-restarting -r
      register: reboot_required
      changed_when: false
      ignore_errors: true

    - name: Reboot server if required and no user is logged in
      command: shutdown -r now "Reboot triggered by Ansible"
      async: 0
      poll: 0
      when: reboot_required.stdout | default("") != "" and ansible_nodename not in ansible_play_hosts_all and ansible_user_id == 'root'
      ignore_errors: true
      register: reboot_result
      become: true

    - name: Wait for server to come back online
      wait_for_connection:
        delay: 30
        timeout: 300
      when: reboot_result is succeeded

    - name: Retrieve patching report
      fetch:
        src: "/tmp/patching_report_{{ inventory_hostname }}.txt"
        dest: "/home/ansible_user/patch-report.txt/"
        flat: yes
      delegate_to: localhost



#---
#- hosts: dev
 # user: admin
#  become: yes
#  tasks:
 # - name: create the webdev group
 #   group: name=webdev state=present 
#  - name: Create the /webdev directory
#    file:
#      name: /webdev
#      state: directory
#      group: webdev
#      mode: 2775 
#  - name: Create a symbolic link
#    file:
#      src: /webdev
#      dest: /var/www/html/webdev
#      state: link
#  - name: Create the file /webdev/index.html
#    copy:
#      content: Development
#      dest: /webdev/index.html
#  - name: Restart httpd
#    service:
#      name: httpd
#      state: restarted
