This Ansible playbook connects to an AWX instance to fetch execution environment details and lists installed Ansible Galaxy collections. The data is saved into separate CSV files for further use.

Features
Fetch Execution Environment Details: Retrieves data such as name, image, description, organization, creation, and modification dates.
Save to CSV: Saves execution environment data to a CSV file.
List Installed Collections: Captures a list of installed Ansible Galaxy collections and writes them to a CSV file.
Extensible Design: Can be customized to include more details or additional tasks.
Requirements
Software
Ansible: Installed on the control node.
AWX API: Accessible from the control node.
Python: Required for running Ansible.
Environment
AWX API Token: A valid API token with read access to execution environments.
Variables
Variable Name	Description	Example
awx_api_url	Base URL for the AWX API.	http://192.168.4.100
awx_api_token	Authentication token for the AWX API.	YourAPITokenHere
csv_file_path	File path for saving execution environment details.	/tmp/execution_environments.csv
collections_csv_file_path	File path for saving collection details.	/tmp/collections.csv
Playbook Tasks
1. Fetch Execution Environments
Uses the AWX API to retrieve a list of execution environments.
Stores the results in a variable for processing.
2. Parse and Save Execution Environment Details
Extracts key fields: name, image, description, organization, created, and modified dates.
Saves the data to a CSV file with the specified headers.
3. List and Save Installed Collections
Runs the ansible-galaxy collection list command.
Parses the output and appends it to a CSV file.

CSV File Formats
Execution Environments
Name	Image	Description	Organization	Created	Modified
ExampleEnv	example/image:1.0	Sample Env	Default Org	2025-01-20	2025-01-21
Installed Collections
Collection Name	Version	Install Path	Namespace
community.general	5.4.0	/path/to/collections	community
Troubleshooting
Common Issues
No Data Retrieved:

Verify that awx_api_url is correct.
Ensure the API token has sufficient permissions.
Connection Errors:

Confirm that the AWX API is accessible from the control node.
Empty CSV Files:

Ensure that execution environments exist in AWX.
Verify the output of ansible-galaxy collection list.
Extending the Playbook
Add more fields from the AWX API response to the execution environments CSV.
Modify the collection parsing logic to include additional details.
Implement additional tasks, such as filtering environments by organization.






- name: Retrieve and save execution environment details to CSV
  hosts: localhost
  gather_facts: no
  vars:
    awx_api_url: "http://192.168.4.100"
    awx_api_token: # Provide your AWX API token here
    csv_file_path: "/tmp/execution_environments.csv"
    collections_csv_file_path: "/tmp/collections.csv"
  tasks:
    - name: Fetch execution environments from AWX
      ansible.builtin.uri:
        url: "{{ awx_api_url }}/api/v2/execution_environments/"
        method: GET
        headers:
          Authorization: "Bearer {{ awx_api_token }}"
          Accept: "application/json"
        return_content: yes
        validate_certs: no
      register: execution_environments_response

    - name: Parse execution environment details
      ansible.builtin.set_fact:
        execution_environments_data: "{{ execution_environments_response.json.results }}"

    - name: Create CSV file header for execution environments
      ansible.builtin.copy:
        content: "Name,Image,Description,Organization,Created,Modified\n"
        dest: "{{ csv_file_path }}"
        force: yes

    - name: Append execution environment details to CSV
      ansible.builtin.lineinfile:
        path: "{{ csv_file_path }}"
        line: "{{ item.name }},{{ item.image }},{{ item.description | default('N/A') }},{{ item.organization | default('N/A') }},{{ item.created }},{{ item.modified }}"
        state: present
        create: yes
      loop: "{{ execution_environments_data }}"

    - name: Display content of the CSV file
      ansible.builtin.shell: "cat {{ csv_file_path }}"
      register: csv_file_content

    - name: Show CSV file content
      ansible.builtin.debug:
        msg: "{{ csv_file_content.stdout }}"

    - name: List installed collections
      ansible.builtin.shell: "ansible-galaxy collection list"
      register: collections_list

    - name: Create CSV file header for collections
      ansible.builtin.copy:
        content: "Namespace,Name,Version,Path\n"
        dest: "{{ collections_csv_file_path }}"
        force: yes

    - name: Parse and save collections to CSV
      ansible.builtin.shell: |
        echo "{{ item }}" | awk '{print $1","$2","$3","$4}' >> {{ collections_csv_file_path }}
      loop: "{{ collections_list.stdout_lines[2:] }}"

    - name: Display content of the collections CSV file
      ansible.builtin.shell: "cat {{ collections_csv_file_path }}"
      register: collections_csv_file_content

    - name: Show collections CSV file content
      ansible.builtin.debug:
        msg: "{{ collections_csv_file_content.stdout }}"
